@model HRMapp.ViewModels.OrderEditorViewModel

@{
    ViewData["Title"] = "OrderEditor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    #orderList {
        width: 400px;
        height: 300px;
        overflow-y: scroll;
        border-style: solid;
    }

    .orderItem > input {
        width: 60px;
    }

    .orderItem > a {
        background-color: #c0392b;
        color: white;
    }

    .orderItem > div {
        display: inline-block;
        padding-left: 4px;
    }
</style>

<h2>@Model.FormTitle</h2>

@if (!String.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger">@Model.ErrorMessage</div>
}

<form asp-action="@Model.FormAction" method="post">
    <div class="form-group">
        <label asp-for="@Model.Customer" class="control-label"></label>
        <input asp-for="@Model.Customer" class="form-control" placeholder="Klantnaam" />
    </div>
    <div class="form-group">
        <label asp-for="@Model.Deadline" class="control-label"></label>
        <input asp-for="@Model.Deadline" class="form-control" placeholder="Typ hier een omschrijving..." type="date" />
    </div>
    <div class="form-group">
        <div class="row">
            <div class="col-md-5">
                <label class="control-label" for="lboxAvailableSkillsets">Orderlijst:</label>
            </div>
            <div class="col-md-2"></div>
            <div class="col-md-5">
                <label class="control-label" for="lboxRequiredSkillsets">Producten:</label>
                <div>
                    <a id="btnMoveToRequired" class="btn btn-default">Toevoegen aan order</a>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-5">
                <div id="orderList">

                </div>
            </div>
            <div class="col-md-2"></div>
            <div class="col-md-5">
                @Html.ListBox("lboxAvailableProducts", Model.Products, new { @class = "form-control", size = 10 }) @*TODO Debug dit, kijk of ie hier eruit flikkert*@
            </div>
        </div>
    </div>
    <input asp-for="@Model.OrderedProducts" type="hidden" />
    <div class="form-group">
        <button id="btnSubmit" type="submit" class="btn btn-default">Opslaan</button>
        <a id="btnCancel" class="btn btn-default">Annuleren</a>
    </div>
</form>

@*<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <link rel="stylesheet" href="/resources/demos/style.css">*@
@*<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>*@
<script>
    //$( function() {
    //    $( "#Deadline" ).datepicker();
    //});
    var orderItems = '';
    @foreach (var item in @Model.Items)
    {
        @:orderItems += createNewOrderListItem(@item.Product.Id, '@item.Product.Name', @item.Amount);
    }
    document.getElementById('orderList').innerHTML = orderItems;

    var userInputChanged = false;
    @if (!String.IsNullOrEmpty(Model.ErrorMessage))
    {
        @:userInputChanged = true;
    }

    document.getElementById('Customer').oninput = function () { userInputChanged = true; }
    document.getElementById('Deadline').oninput = function () { userInputChanged = true; }
    document.getElementById('btnSubmit').onclick = function() {
        userInputChanged = false;
        JsonfyOrderedProducts();
    }
    document.getElementById('btnCancel').onclick = function () {
        if (@Model.Id > -1) {
            window.location.href = '/Order/Index/@Model.Id';
        } else {
            window.location.href = '/Order';
        }
    }

    function JsonfyOrderedProducts() {
        var orderedProducts = [];

        //$('#orderList > .orderItem').each(function(index) {
            //alert($(this).childern('productId').val());
            //orderedProducts.push({
            //    productId: this.childern('productId').val(),
            //    amount: this.childern('productCount').val()
            //});
        //});

        var items = $('#orderList > .orderItem');
        $.each(items,
            function () {
                var orderItem = $(this);
                //alert(
                //    $(this).attr('id') + '\n' +
                //    'PrdouctId : ' + orderItem.find('.productId').val() + '\n' +
                //    'Amount : ' + orderItem.find('.productCount').val()
                //);
                orderedProducts.push({
                    productId: orderItem.find('.productId').val(),
                    amount: orderItem.find('.productCount').val()
                });

                //alert(JSON.stringify({ orderedItems: orderedProducts }));
            });

        //$('#OrderedProducts').val(JSON.stringify({ orderedItems: orderedProducts }));
        $('#OrderedProducts').val(JSON.stringify(orderedProducts));
        //alert(JSON.stringify(orderedProducts));
    }

    window.onbeforeunload = function (event) {
        if (userInputChanged) {
            var message = 'Er zijn wijzigingen niet opgeslagen. Weet u zeker dat u de pagina wilt verlaten?';
            return message;
        }
    }


    document.getElementById('btnMoveToRequired').onclick = function () {
        userInputChanged = true;
        addProductToOrder();
    }

    function moveSelectedOptionsBetweenSelects(selectElementFrom, selectElementTo) {
        var selectedItems = getSelectValues(selectElementFrom);

        for (var i = 0; i < selectedItems.length; i++) {
            selectElementFrom.remove(getOptionIndexByValue(selectElementFrom, selectedItems[i].value));  // Could be more efficient perhaps
            selectElementTo.add(selectedItems[i]);
        }
    }

    // Return an array of the selected opion values
    // select is an HTML select element
    function getSelectValues(selectElement) {
        var result = [];
        var options = selectElement && selectElement.options;   // If I understand correctly, it checks if selectElement is not undefined, if it's not, it assigns the next statement to options
        var opt;

        for (var i = 0, iLen = options.length; i < iLen; i++) {
            opt = options[i];

            if (opt.selected) {
                result.push(opt);
            }
        }
        return result;
    }

    function getOptionIndexByValue(selectElement, id) {
        for (var i = 0; i < selectElement.options.length; i++) {
            if (selectElement.options[i].value == id) {
                return i;
            }
        }
        return -1;
    }


    function addProductToOrder() {
        var selectElement = document.getElementById('lboxAvailableProducts');
        var selectedItems = getSelectValues(selectElement);

        for (var i = 0; i < selectedItems.length; i++) {
            selectElement.remove(getOptionIndexByValue(selectElement, selectedItems[i].value));
            //document.getElementById('orderList').innerHTML += createNewOrderListItem(selectedItems[i].value, selectedItems[i].text);
            $('#orderList').append(createNewOrderListItem(selectedItems[i].value, selectedItems[i].text, 1));
        }
    }

    function removeProductFromOrder(id) {
        var name = $('#orderItem' + id + 'Name').html();
        $('#orderListItem' + id).remove();
        document.getElementById('lboxAvailableProducts').add(new Option(name, id));
    }

    function createNewOrderListItem(id, name, amount) {
        return '<div class="orderItem" id="orderListItem' + id + '">' +
            '<a class="btn btn-default" onclick="removeProductFromOrder(' + id + ')">X</a>' +
            '<input class="productCount" type="number" value="' + amount + '" min="1" />' +
            '<div id="orderItem' + id + 'Name">' + name + '</div>' +
            '<input class="productId" type="hidden" value="' + id + '"/>' +
            '</div>';
    }

    //function createNewOrderListItem(id, name) {
    //    return '<div class="orderItem" id="orderListItem' + id + '">' +
    //        '<a class="btn btn-default" onclick="removeProductFromOrder(' + id + ')">X</a>' +
    //        '<input type="number" value="1" min="1" />' +
    //        '<div id="orderItem' + id + 'Name">' + name + '</div>' +
    //        '</div>';
    //}
</script>